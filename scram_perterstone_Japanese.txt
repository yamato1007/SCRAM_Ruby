SCRAM : Scalable Collision-avoiding Role Assiginment with Minimal-makespan for Formational Positioning
位置取りのための処理時間の最小化を行う、衝突を考慮したスケーラブルな役割割当

---Abstract---

マルチエージェントではしばしば効率的なサブタスクの割当が必要とされる
とくに空間的な分野では、ロボット位置とタスク位置間の距離が重要な尺度となる
この論文では、物理的な距離という明確な尺度の元で、エージェント間の衝突も考慮しながら、各エージェントとタスク位置までの距離が最小となるようなタスク割り当てを導く手法を考察する
そして我々は、SCRAMという名で広く知られ、エージェントの位置取りに使われる、スケーラブル（自由に拡大縮小可能）なマルチエージェントの、動的なタスク割当システム(role assignment system)を提供する
SCRAMは、タスクの最小化と衝突の回避をしつつ、エージェントと目的地を対応付けるこの問題を、グラフ理論でアプローチしている
SCRAMは不完全、観察可能、非決定的、騒がしく(noisy)、動的、通信量の制限された、ロボカップ3Dシュミレーションの中で物理的にリアルな（物理演算のされる）な人型ロボットで行われるサッカーの、分散の調整をするためにデザインされたものである。
（超絶適当翻訳：元来SCRAMはリアルなサッカーシュミレーションのロボットの配置を調整するために考案されたもの）
現在は、SCRAMはリアルなマルチエージェントシステム一般に広く適用できるような、多項式時間で計算可能なアルゴリズムとして一般化されている

要約
    マルチエージェントにおいて、エージェント同士の衝突も考慮した上で、各目的地への移動距離を最小化するようなタスク割当手法を考えるよ
    この問題を解く手法全般をSCRAMといって、今では多項式時間で計算可能で、広い範囲に応用できるアルゴリズムとして知られるよ


2 Role Assignment Problem （タスク割当問題）

ここに全て同等のエージェント群（A := {a1,a2,..,an}）があり、それをn個の目的地群（P := {p1,p2,..,pn}）に、衝突なども考慮しながらエージェント群が目的地軍に到達する時間を最小にするような割当をしたい。

タスク割当問題では以下の2つの仮定を置く
    1.任意の2つのエージェント、及び2つのポジションは同じ場所を占有しない
    2.全てのエージェントは固定されたポジションにまっすぐ同じスピードで進む

以下の2つの特性を満たす時、このタスク割当をCM viled（Collision-avoiding with Minimal−makespan）と呼ぶ
    1.最大距離を最小化する
        その割当がもつ最大の移動距離が、考えうる他の割当のそれより小さいような割当
    2.衝突を避ける
        ロボットが割り当てられたポジションに移動することによって、ロボットが衝突することがないような割当
また、3つ目に、CM validであるためにあると望ましい特性として
    3.動的一貫性
        時間Tにおいて導き出した割当Mに従いエージェントが動き出したあとの時間t(>T)において割当を導いても常に同じ割当Mが出力される
最初の特性2つはタスク割当問題から直接示される。3つ目の特性はfが一度割当mを導きだしたら、ターゲットポジションが変化しないかぎりfはどれだけ時間がたっても常に同じ割当mを導くことを保証する。


3 Role assignment Function （タスク割当手法）

続くサブセクションではSection2で示したタスク割当問題のCM validな2つの割当手法を提供する。アルゴリズムによる実装も適宜提供する。

3.1 Minimum Maximal Distance Recursive (MMDR) Role Assignment Function


        
    
MMDRはO(n^4)多項式計算時間である

（略）
Algorithm4は重みで昇順ソートされた辺の配列(23行目)から逐次的に距離が増加していくようにallowedEdgesというグラフに辺を追加していくことで最適割当における、最小化された最大距離を見つける。
このアルゴリズムは辺の数が最大となる割当を見つけるFord-FulKersonアルゴリズムを実行する合間合間に小さい順に辺を追加していく処理（30行目）を挟み込んでいる。
Ford-Fulkerson（flood,resetFlood,reversePathによって実装される）はエージェントからポジションへの新しいパスを見つけるために幅優先探索を行っている。
Algorithm4はallowedEdgesという空集合から始まる(1行目)。Ford-Fulkersonの幅優先探索が新しいパスを見つけられない時はかならず、グラフに辺を加え、探索を続ける。
特に、エージェントからポジションへのn個のパスを見つけた時に、最後に追加した辺は最適割当の最小化された最大の辺となる





3.2 Minimum Maximal Distance + Minimum Sum Distance^2 (MMD+MSD^2) Role Assignment Function

エージェントとそれに割り当てられたタスク間の距離の最大値を、最小化する戦略
(距離が遠い割当が一個でも発生しないようにする)
                            ＋
各エージェントタスク間の距離の2乗の総和を最小化するアルゴリズム
(距離の2乗の平均を最小化する)

もう一つのタスク割当手法として、いずれかのエージェントが持つ移動距離の最大値を最小化し（ただし、MMDRのように再帰はしない）、その後、全てのエージェントの移動距離の2乗を最小化するものがある
我々はこれをthe Minimum Maximal Distance + Minimum Sum Distance2 (MMD+MSD2) role assignment functionと呼ぶ
具体的には以下の式のようなM*を見つける
    1:MM'' := {X <- MM | ||X||∞ = min(M<-MM)(||M||∞) }
        Maximal Distance が同一となるような割当の集合
    2:M* := argmin(M<-MM'')( ||M||(2,2) )
        MM''の中で、Sum Distans^2 が最小となるような割当 
    注訳）　A := B ------- AをBと定義する、の意

ここで我々は、MMD+MSD^2がCM validなタスク割当手法であることの簡単な証明のスケッチを提供する
より長く、完全な証明はAppendix Aで提供する

Theorem 3. MMD+MSD^2 is CM valid.

最大距離が最小の割当の集合MM''（式１）を考慮すれば、いずれかのエージェントの持つ移動距離の最大値を最小化したことになる（特性1:Minimizing Maximal Distance）
もし、その経路中で２つのエージェントがぶつかっても(特性2:Avoiding Collisions)、MMD+MSD^2は三角不等式を用いて、2つのエージェントの目的地を入れ替えるなどしてより少ないコストのマッピングを見つけることが出来る。
しかし、その両方あるいは片方の移動しなければならない距離は、距離の2乗の和（式1）と最長距離（式2）を減少させることにより、決して増加することはない
MMDRとは違い、MMD+MSD^2は動的一貫性（特性3）を持たない。なぜならば、距離の二乗は時間（移動距離）に対して一定のペースでは減少しない。しかし事実上エージェントがポジションに向かって移動している間、距離が遠いほど距離^2は速いペースで減少する。
この距離^2が一定のペースで減少しないという欠陥は、割り当てられてないマッチングの距離^2が、割り当てられているマッチングの距離^2より早く減少することを許している。
したがって、MMD+MSD^2でない割当の距離の2乗の総和がMMD+MSD^2よりも小さくなることがある。
MMD+MSD^2が動的一貫性を持たない具体例についてはAppendixBで例を示す。

MMD^MSD^2の多項式計算時間
Algorithm5はセクション3.1で提供したAlgorithm4によって計算された最小化された最大の距離により、最初にみつけた最適割当をみつけるMMD+MSD^2を実装している。
我々はその時、先ほど導出した最小化された最大距離以下の長さの全ての辺からなるminimalEdgesという集合を作り、Hungarianアルゴリズムの入力として利用する。
このとき、辺の重みは距離の二乗であること、したがって、hungarianアルゴリズムは距離の二乗の総和を最小化することに注意されたい。
最小化された最大の距離よりも大きい長さを持つ全ての辺はhungarianアルゴリズムを実行する前に全て排除されるので、最終的な解もまた、いずれかのエージェントの最大の移動距離は最小化されている。

ハンガリアンアルゴリズムのO(n^3)という計算時間はAlgorithm4よりも多く、したがって、Algorithm4の計算複雑度はO(n^3)となる。
Algorithm4におけるFord-Fulkersonの幅優先探索はO(n^2)である。


